{"version":3,"file":"chunks/280.a56f0a9575395f013de4.min.js","mappings":"2IAOA,MAAMA,E,OAAMC,EAAQC,UAAU,sBAEjBC,EAAS,IAAIC,EAAAA,EAAO,sBACjCD,EAAOE,YAAY,aAAc,MAGjC,MAAMC,UAAgBC,EAAAA,EAClBC,YAAc,qBACdA,eAAiB,iCACjBA,cAAgBL,EAEhBM,IAAAA,GACI,MAAMC,EAAiBC,OAAOC,WAAW,eAAeC,KAAKC,QAAQC,iBACrEC,EAAAA,EAAOC,mBACHP,EACA,SACA,wBACCQ,IACGL,KAAKM,kBAAkBD,GACvBlB,EAAIoB,KAAK,0CAA0CT,OAAOU,gBAIlEL,EAAAA,EAAOC,mBACHN,OAAOW,WACP,WACA,0CACA,MAEUZ,EAAea,SAAWV,KAAKW,GAAGC,aAAa,SACjDZ,KAAKW,GAAGE,gBAAgB,UAMpCV,EAAAA,EAAOC,mBACHJ,KAAKW,GACL,UACA,uCACCG,IACG,GAAkB,WAAdA,EAAMC,IAAkB,CAElBlB,EAAea,SACjBV,KAAKW,GAAGE,gBAAgB,QAG5B,IAAK,MAAMG,KAAOhB,KAAKW,GAAGM,iBAAiB,WACvCD,EAAIH,gBAAgB,OAE5B,IAIRb,KAAKM,kBAAkBT,EAC3B,CAEAS,iBAAAA,CAAkBD,GACdlB,EAAIoB,KAAK,qBACLF,EAAIK,UAAaV,KAAKW,GAAGC,aAAa,SAEtCZ,KAAKW,GAAGO,aAAa,OAAQ,IAC7B/B,EAAIoB,KAAK,kBACAF,EAAIK,SAAWV,KAAKW,GAAGC,aAAa,UAE7CZ,KAAKW,GAAGE,gBAAgB,QACxB1B,EAAIoB,KAAK,kBAEjB,EAGJY,EAAAA,EAASC,SAAS3B,GC3ElB0B,EAAAA,EAASvB,M","sources":["webpack://casc-site/./resources/js/details_navigation.js","webpack://casc-site/./resources/bundle.js"],"sourcesContent":["// Set the base URL based on the current location, listening on navigation changes.\nimport { BasePattern } from \"@patternslib/patternslib/src/core/basepattern\";\nimport Parser from \"@patternslib/patternslib/src/core/parser\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\nimport events from \"@patternslib/patternslib/src/core/events\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\n\nconst log = logging.getLogger(\"details-navigation\");\n\nexport const parser = new Parser(\"details-navigation\");\nparser.addArgument(\"breakpoint\", 1024);\n\n\nclass Pattern extends BasePattern {\n    static name = \"details-navigation\";\n    static trigger = \"details.pat-details-navigation\";\n    static parser = parser;\n\n    init() {\n        const mediaquerylist = window.matchMedia(`(min-width: ${this.options.breakpoint}px)`);\n        events.add_event_listener(\n            mediaquerylist,\n            \"change\",\n            \"details-navigation-mq\",\n            (mql) => {\n                this.set_details_state(mql);\n                log.info(`mediaquery change - window.innerWidth: ${window.innerWidth}`);\n            }\n        );\n\n        events.add_event_listener(\n            window.navigation,\n            \"navigate\",\n            \"pat-details-navigation--history-changed\",\n            () => {\n                // Only close the nav after navigating on mobile devies.\n                if (! mediaquerylist.matches && this.el.hasAttribute(\"open\")) {\n                    this.el.removeAttribute(\"open\");\n                }\n            }\n        );\n\n        // Close on ESC\n        events.add_event_listener(\n            this.el,\n            \"keydown\",\n            \"pat-details-navigation--close-on-esc\",\n            (event) => {\n                if (event.key === \"Escape\") {\n                    // Only close the main details element on mobile devices.\n                    if (! mediaquerylist.matches) {\n                        this.el.removeAttribute(\"open\");\n                    }\n                    // Close all submenus on ESC\n                    for (const sub of this.el.querySelectorAll(\"details\")) {\n                        sub.removeAttribute(\"open\");\n                    }\n                }\n            }\n        );\n\n        this.set_details_state(mediaquerylist);\n    }\n\n    set_details_state(mql) {\n        log.info(\"set_details_state\");\n        if (mql.matches && ! this.el.hasAttribute(\"open\")) {\n            // Open the details navigation element\n            this.el.setAttribute(\"open\", \"\");\n            log.info(\"    set open\");\n        } else if (! mql.matches && this.el.hasAttribute(\"open\")) {\n            // Close the details navigation element\n            this.el.removeAttribute(\"open\");\n            log.info(\"    set closed\");\n        }\n    }\n}\n\nregistry.register(Pattern);\nexport default Pattern;\nexport { Pattern };\n","import registry from \"@patternslib/patternslib/src/core/registry\";\nimport \"./js/details_navigation\";\n\nregistry.init();\n"],"names":["log","logging","getLogger","parser","Parser","addArgument","Pattern","BasePattern","static","init","mediaquerylist","window","matchMedia","this","options","breakpoint","events","add_event_listener","mql","set_details_state","info","innerWidth","navigation","matches","el","hasAttribute","removeAttribute","event","key","sub","querySelectorAll","setAttribute","registry","register"],"sourceRoot":""}